[{"D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\index.js":"1","D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\reportWebVitals.js":"2","D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\App.jsx":"3","D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\Data.jsx":"4","D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\LiComp.jsx":"5","D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\InvoceList.jsx":"6","D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\ItemSearch.jsx":"7","D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\InvoiceComp.jsx":"8","D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\InvoiceChildComp.jsx":"9","D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\hooks\\useCurrentHeight.jsx":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":10369,"mtime":1610106782740,"results":"14","hashOfConfig":"12"},{"size":848,"mtime":1610075067432,"results":"15","hashOfConfig":"12"},{"size":6254,"mtime":1610106733756,"results":"16","hashOfConfig":"12"},{"size":7348,"mtime":1610109210148,"results":"17","hashOfConfig":"12"},{"size":686,"mtime":1610103225030,"results":"18","hashOfConfig":"12"},{"size":1924,"mtime":1610102832518,"results":"19","hashOfConfig":"12"},{"size":2521,"mtime":1610109137484,"results":"20","hashOfConfig":"12"},{"size":555,"mtime":1610105315443,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"18odyn2",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\index.js",[],["47","48"],"D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\reportWebVitals.js",[],"D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\App.jsx",["49","50","51","52"],"import React , {useState, useEffect} from 'react';\nimport Modal from \"react-modal\";\n\nimport './App.css';\nimport LoImage from \"./images/03-pre-work-visualisation.png\";\n\nimport { datas } from \"./Data\"; \nimport LiComp from './LiComp';\nimport InvoceList from './InvoceList';\nimport useCurrentWidth from \"./hooks/useCurrentHeight\";\n\nfunction App() {\n  const [userdata, setUserData] = useState({ email: '', pass:'',pass1:'' });\n  const [addedCount, setAddedCount] = useState(0);\n  const [addedDatas, setAddedData] = useState([]);\n  const [addedDatasId, setAddedDataID] = useState([]);\n  const [userpdata, setUserpData] = useState({ name: '', addr:'' });\n  const [formSignIn, setFormSignIn] = useState(false);\n  const [usergrant, setUsergrant] = useState(false);\n  \n  const [modalAddData, setModalAddData] = useState(false);\n  \n  const [toggleView, setToggleView] = useState(false);\n  \n  const [toggleView1, setToggleView1] = useState(false);\n  var settings ={}\n  if(useCurrentWidth() < 600 ){\n    settings = {\n      overlay:{\n          background: `radial-gradient(\n            circle at 50% 50%,\n            rgba(38, 36, 51, 0.36),\n            rgba(21, 20, 26, 0.48) 31%\n          )`,\n          \n          zIndex: 1999,\n      },\n      content:{\n          position:\"fixed\",\n          height: \"500px\",\n          width:\"330px\",\n          background:\"#fff\",\n          margin:\"auto\",\n          border: \"none\",\n          zIndex: 1999,\n          padding:10, \n      }\n  }\n }\n else{\n    settings = {\n      overlay:{\n          background: `radial-gradient(\n            circle at 50% 50%,\n            rgba(38, 36, 51, 0.36),\n            rgba(21, 20, 26, 0.48) 31%\n          )`,\n          \n          zIndex: 1999,\n      },\n      content:{\n          position:\"fixed\",\n          height: \"600px\",\n          width:\"800px\",\n          background:\"#fff\",\n          margin:\"auto\",\n          border: \"none\",\n          zIndex: 1999,\n          padding:10, \n      }\n  }\n };\n\n  let useristhere =JSON.parse(localStorage.getItem('user'));\n  \n  let userhaveaccess =JSON.parse(localStorage.getItem('usermailcheck'));\n  let addedIlists = JSON.parse(localStorage.getItem('addedIList'));\n  // let usergrant = false;\n  console.log(typeof useristhere);\n  const onClickToggle = () => {\n      setFormSignIn(!formSignIn);\n      let subt=  document.getElementById('subtn');\n      if(formSignIn){\n       subt.classList.add('scrt');\n      }\n      else{\n       subt.classList.remove('scrt');\n      }\n      \n  }\n  useEffect(() => {\n        localStorage.setItem(\"addedIList\", JSON.stringify(addedDatas));\n  }, [addedDatas]);\n\n\n  function userFinder(arr ,e,p ){\n    \n    let r =  false;\n    arr.forEach((child , index ) => {\n        if(child.mail === e && child.pass === p)\n        {\n          r = true\n        }\n    \n    });\n    return r;\n  }\n  function userFinder1(arr , m ){\n    \n    let r =  false;\n    arr.forEach((child , index ) => {\n        if(child.mail === m)\n        {\n          r = true\n        }\n    \n    });\n    return r;\n  }\n\n  const onAddedData = (e) => {\n    if(formSignIn){\n      let users= JSON.parse(localStorage.getItem('userlist1'));\n      console.log(users);\n\n      if(users){\n        console.log('have user');\n        let e =userdata.email;\n        let p = userdata.pass;\n\n        let result = userFinder(users, e, p);\n\n        console.log(result);\n        if(!result) {\n            \n            let u1 = \n            {\n              mail: userdata.email,\n              pass: userdata.pass\n            };\n          users.push(u1);\n          \n          localStorage.setItem(\"userlist1\" ,JSON.stringify(users));\n        }\n\n      }\n      else{\n        let u = [\n          {\n            mail: userdata.email,\n            pass: userdata.pass\n          }\n        ]\n        console.log(u);\n        localStorage.setItem(\"userlist1\" ,JSON.stringify(u));\n      }\n      let userd= JSON.parse(localStorage.getItem('userdlist'));\n      console.log(userd);\n      \n      let m = JSON.parse(localStorage.getItem(\"usermail\"));\n      if(userd){\n        let result1 = userFinder1(userd, m);\n\n        if(result1) {\n            \n            setUsergrant(true);\n        };\n\n      }\n      setToggleView(true);\n    }\n    else{\n      \n      let users= JSON.parse(localStorage.getItem('userlist1'));\n      console.log(users);\n\n      let e =userdata.email;\n      let p = userdata.pass;\n\n      let result = userFinder(users, e, p);\n\n      if(result) {\n          \n        localStorage.setItem(\"user\" ,JSON.stringify(result));\n        localStorage.setItem(\"usermail\", JSON.stringify(userdata.email));\n      };\n\n      \n\n    }\n  }\n  const onAddedDetail = (e) => {\n    e.preventDefault();\n    console.log(\"adding\")\n    \n    console.log(JSON.parse(localStorage.getItem(\"usermail\")));\n    let maile = JSON.parse(localStorage.getItem(\"usermail\"));\n\n    \n    let userd= JSON.parse(localStorage.getItem('userdlist'));\n    console.log(userd);\n\n    if(userd){\n      console.log('have user detail');\n          let u1 = \n          {\n            mail:maile,\n            name: userpdata.name,\n            addr: userpdata.addr,\n            \n          };\n        userd.push(u1);\n        \n        localStorage.setItem(\"userdlist\" ,JSON.stringify(userd));\n      \n\n    }\n    else{\n      let u = [\n        {\n          mail: maile,\n          name: userpdata.name,\n          addr: userpdata.addr,\n        }\n      ]\n      console.log(u);\n      localStorage.setItem(\"userdlist\" ,JSON.stringify(u));\n    }\n    setUsergrant(true);\n\n    \n  }\n  const reloadFunc = () => {\n    window.location.reload();\n\n  }\n  const logoutFunc = () => {\n    localStorage.setItem(\"user\" ,JSON.stringify(false));\n    localStorage.setItem(\"usermailcheck\", JSON.stringify(false));\n    window.location.reload();\n  }\n\n  const addedToCart = (i) => {\n      console.log(datas[i]);\n      let d= datas[i];\n      d[\"item_count\"] = 1;\n      d[\"item_qaun\"] = \"small\";\n      setAddedData([...addedDatas, d]);\n      setAddedDataID([...addedDatasId, i]);\n      setAddedCount(addedDatas.length + 1);\n  }\n  const incrementCount = (i, c) => {\n    console.log(addedDatas[i]);\n    let ad = addedDatas[i];\n    \n    console.log(ad.item_count);\n\n    ad.item_count = c + 1;\n    // setAddedData(addedDatas[i] = ad );\n    console.log(typeof addedDatas);\n  }\n \n  const SignInForm = (\n    <div className=\"login-box\">\n    <div className=\"lo-img-box\">\n        <button className=\"tbtn\" onClick={onClickToggle}>click here to {!formSignIn? \"Sign Up\": \"Sign In\" }</button>\n        <img src={LoImage} className=\"lo-img\" alt=\"lo-image\"/>\n    </div>\n    <div className=\"form-box\">\n          <h3 className=\"sign-in-text\">{formSignIn? \"SignUp\": \"SignIn\" }</h3>\n          <form onSubmit={onAddedData} >\n          <small id=\"email\" className=\"form-text text-muted\">Email</small>\n          <input type=\"text\" className=\"form-c\" placeholder=\"Enter your mail\"\n          value={userdata.email}  \n          onChange={  e => setUserData( { ...userdata , email: e.target.value})}/>  \n          \n          <small id=\"password\" className=\"form-text text-muted\">Password</small>\n          <input type=\"password\" className=\"form-c\" placeholder=\"Enter your password\"\n          value={userdata.pass}  \n          onChange={  e => setUserData( { ...userdata , pass: e.target.value})}/> \n\n          {\n            formSignIn &&\n            <>\n            <small id=\"passwordC\" className=\"form-text text-muted\">Confirm Password</small>\n            <input type=\"password\" className=\"form-c\" placeholder=\"Confirm your password\"\n            value={userdata.pass1}  \n            onChange={  e => setUserData( { ...userdata , pass1: e.target.value})}/> </>\n          }\n\n\n          <button type=\"submit\" className=\"form-s scrt\" id=\"subtn\">{formSignIn? \"SignUp\": \"Sign in\" }</button> \n          </form>\n    </div>\n\n  </div>\n  );\n    \n\n  const InvoiveBox = (\n    <div className=\"product-box\">\n        <h1>{userhaveaccess? (!usergrant&& \"Add your info\"): \"Order\"}</h1>\n        <div className=\"icons\">\n          <button type=\"submit\" className=\"form-s2\" onClick={() => setToggleView1(true)}>Invoices</button> \n          <button type=\"submit\" className=\"form-s2\" onClick={logoutFunc}>logout</button> \n          {\n            (addedCount > 0) && \n            <button type=\"submit\" className=\"form-s2\"  onClick ={() => setModalAddData(true)} >Order - {addedCount}</button> \n          }\n        </div>\n        {userhaveaccess?( !usergrant &&\n           <form onSubmit={onAddedDetail} >\n           <small id=\"email\" className=\"form-text text-muted\">Name</small>\n           <input type=\"text\" className=\"form-c1\" placeholder=\"Enter name\"\n           value={userpdata.name}  \n           onChange={  e => setUserpData( { ...userpdata , name: e.target.value})}/>  \n\n           <small id=\"email\" className=\"form-text text-muted\">Address</small>\n           <input type=\"text\" className=\"form-c1\" placeholder=\"Your adrress?\"\n           value={userpdata.addr}  \n           onChange={  e => setUserpData( { ...userpdata , addr: e.target.value})}/> \n           \n          \n \n \n           <button type=\"submit\" className=\"form-s1\"  >Submit</button> \n           </form>)\n        :\n        <div className=\"items\">\n        {\n          datas.map(data => {\n            return(\n                <div className=\"item\" key={data.id}>\n                    <h5>{data.name}</h5>\n                    <p>{data.description}</p>\n                    <p>Price:- {data.price} , ratings: -{ data.rating}</p>\n                    {\n                      (addedDatasId.includes(data.id))?\n                        <button type=\"submit\" className=\"ibtn\" >Added</button> :\n                        <button type=\"submit\" className=\"ibtn\" onClick={() => addedToCart(data.id)}>Add</button> \n\n                    }\n                </div>\n            );\n          })\n        }\n      </div>\n        }\n        \n        \n\n      </div>\n  )\n\n\n  return (\n    <div className=\"App\">\n        {toggleView1 ? <InvoceList backFunc={setToggleView1} />: \n       <>{useristhere? InvoiveBox : SignInForm}\n        <Modal isOpen={modalAddData} onRequestClose={() => setModalAddData(false)}\n         style={\n            settings\n        }\n        >\n           <div className=\"bg\">\n              \n            <LiComp addedItems={addedDatas}\n             manAddedD={() => {reloadFunc()}}\n              closeModal={setModalAddData}/>\n            </div>\n        </Modal></>}\n    </div>\n  );\n}\n\nexport default App;\n","D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\Data.jsx",[],"D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\LiComp.jsx",["53","54","55"],"import React, { useState,useEffect} from 'react'\r\n\r\nfunction LiComp({closeModal,manAddedD}) {\r\n\r\n   let arril = JSON.parse(localStorage.getItem('addedIList'));\r\n    console.log(arril);\r\n\r\n    useEffect(() => {\r\n        \r\n        console.log(\"hi\");\r\n    }, []);\r\n    let ps = document.getElementsByTagName(\"span\");\r\n    let sl = document.getElementsByTagName(\"select\");\r\n    let mnbl = document.getElementsByClassName(\"ibtm\");\r\n    let adbl = document.getElementsByClassName(\"ibtp\");\r\n    const decrementCount = (i, c) => {\r\n        console.log(arril[i]);\r\n        let ad = arril[i];\r\n        \r\n        console.log(ad.item_count);\r\n        if(ad.item_count < 2){\r\n            console.log(\"dece\");\r\n        }else{\r\n        ad.item_count = ad.item_count - 1;\r\n        ps[i].innerHTML = ad.item_count;\r\n        console.log(arril);\r\n        }\r\n\r\n        localStorage.setItem(\"addedIList\", JSON.stringify(arril));\r\n      }\r\n    const incrementCount = (i, c) => {\r\n        console.log(arril[i]);\r\n        let ad = arril[i];\r\n        \r\n        console.log(ad.item_count);\r\n        if(ad.item_count > 4 ){\r\n            console.log(\"extended\")\r\n        }else{\r\n            ad.item_count = ad.item_count + 1;\r\n            ps[i].innerHTML = ad.item_count;\r\n            console.log(arril);\r\n        }\r\n        localStorage.setItem(\"addedIList\", JSON.stringify(arril));\r\n      }\r\n      const changePref = (i, v) => {\r\n          console.log(v);\r\n          console.log(arril[i]);\r\n        let ad = arril[i];\r\n        \r\n        console.log(ad.item_qaun);\r\n    \r\n        ad.item_qaun = v\r\n        sl[i].value = v;\r\n        console.log(arril);\r\n        localStorage.setItem(\"addedIList\", JSON.stringify(arril));\r\n\r\n      }\r\n      const closeModalLP = (f) => {\r\n          closeModal(f);\r\n      }\r\n      function amountCalculator(arr  ){\r\n        let a = 0\r\n        arr.forEach((child , index ) => {\r\n            a = a + child.item_count * child.price;\r\n            console.log(a);\r\n            console.log(child.item_count * child.price);\r\n            console.log(child.item_count );\r\n            console.log(child.price);\r\n        });\r\n        return a;\r\n      }\r\n      const onProceed = () => {\r\n        console.log(\"adding Invoice\")\r\n        \r\n    \r\n        \r\n        let iList= JSON.parse(localStorage.getItem('Ilistst'));\r\n        console.log(iList);\r\n    \r\n        if(iList && iList.length > 0){\r\n          console.log('have user detail');\r\n            let ammoun = amountCalculator(arril);\r\n            console.log(ammoun);\r\n            let len = iList.length;\r\n            let lastI = iList[len - 1].id;\r\n            console.log(lastI);\r\n            let u = {id: lastI + 1 ,items: arril, status: \"unpaid\", bill: ammoun}\r\n            \r\n            iList.push(u);\r\n            \r\n            localStorage.setItem(\"Ilistst\" ,JSON.stringify(iList));\r\n            \r\n            localStorage.setItem(\"addedIList\", JSON.stringify([]));\r\n            manAddedD([]);\r\n          \r\n    \r\n        }\r\n        else{\r\n            \r\n            let ammoun = amountCalculator(arril);\r\n            console.log(ammoun);\r\n          let u = [\r\n            {id:1, items: arril, status: \"unpaid\", bill: ammoun}\r\n          ]\r\n          localStorage.setItem(\"Ilistst\" ,JSON.stringify(u));\r\n          localStorage.setItem(\"addedIList\", JSON.stringify([]));\r\n          \r\n          manAddedD();\r\n          \r\n      window.location.reload();\r\n        };\r\n        closeModalLP(false);\r\n    \r\n        \r\n      }\r\n    return (\r\n        <>\r\n                \r\n              <button type=\"submit\" className=\"form-s2\" onClick={() => closeModalLP(false)}>close</button> \r\n                <ul className=\"dlist\">\r\n                   \r\n                   {\r\n                arril.map((data , index) => {\r\n                      \r\n                          console.log(JSON.parse(localStorage.getItem('addedIList')));\r\n                          console.log(data.item_count); \r\n                          return(\r\n                              <li>\r\n                                <p className=\"dname\">{data.name} </p> <div><button className=\"ibt ibtm\"\r\n                                onClick={() => {  \r\n                                    decrementCount(index);\r\n                                    } }\r\n                                >-</button><span>{data.item_count}</span><button className=\"ibt ibtp\" onClick={() => {  \r\n                                    incrementCount(index);\r\n                                    } }>+</button></div> \r\n                                  \r\n                                   <div className=\"dname\"> \r\n                                       \r\n                                  <select name=\"food-opt\" id=\"food-o\"  onChange={(e) => {changePref(index, e.target.value)}}>\r\n                                    <option value=\"small\">Small</option>\r\n                                    <option value=\"medium\">Medium</option>\r\n                                    <option value=\"large\">Large</option>\r\n                      \r\n                                  </select></div>\r\n                                    \r\n                                </li>\r\n                          );\r\n                        })}\r\n\r\n\r\n                </ul>\r\n                \r\n          <button className=\"form-s2\" onClick={onProceed}>Proceed</button> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default LiComp\r\n\r\n\r\n\r\n\r\n// { addedDatasId.map((data , index)=> {\r\n                      \r\n//     console.log(JSON.parse(localStorage.getItem('addedIList')));\r\n//     let arrd = addedDatas\r\n//     console.log(addedDatasId);\r\n//     console.log(addedDatas);\r\n//     return(\r\n//         <li>\r\n//           <p className=\"dname\">{addedDatas[index].name} </p> <div> <button className=\"ibt\">-</button>{addedDatas[index].item_count}<button className=\"ibt\" onClick={() => setAddedData(...addedDatas,  addedDatas[index].item_count = addedDatas[index].item_count + 1 )}>+</button></div> \r\n            \r\n              \r\n//             <select name=\"food-opt\" id=\"food-o\">\r\n//               <option value=\"small\">Small</option>\r\n//               <option value=\"medium\">Medium</option>\r\n//               <option value=\"large\">Large</option>\r\n\r\n//             </select>\r\n              \r\n//           </li>\r\n//     );\r\n//   })}","D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\InvoceList.jsx",["56","57","58","59","60","61"],"import React, {useState, useEffect} from 'react'\r\nimport ItemSearch from './ItemSearch';\r\nimport Modal from \"react-modal\";\r\nimport InvoiceComp from './InvoiceComp';\r\nimport useCurrentWidth from './hooks/useCurrentHeight';\r\n\r\nfunction InvoceList({backFunc}) {\r\n    \r\n    let iList =JSON.parse(localStorage.getItem('Ilistst')) \r\n    const [items, setItems] = useState([]);\r\n    const [invoItem, setInvoItem] = useState(0);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [itemSearch, setItemSearch] = useState(\"\");\r\n    const [modalInvoice, setModalInvoice] = useState(false);\r\n    \r\n    const [statusSearch, setStatusSearch] = useState(\"\");\r\n    \r\n    const [deleteId, setDeleteId] = useState(null);\r\n    \r\n    const [updateId, setUpdateId] = useState(null);\r\n    \r\n    const [invoId, setInvoId] = useState(null);\r\n    \r\n    const [invoIdMod, setInvoIdMod] = useState(null);\r\n\r\n\r\n    function searchFunc(arr ,s ){\r\n    \r\n        let r =  [];\r\n        arr.forEach((child , index ) => {\r\n            let di = child.items.filter((item) => item.name.match(s));\r\n            if(di.length > 0){\r\n                r.push(child);\r\n            }\r\n        });\r\n        return r;\r\n      };\r\n      var settings ={}\r\n      if(useCurrentWidth() < 600 ){\r\n        settings = {\r\n          overlay:{\r\n              background: `radial-gradient(\r\n                circle at 50% 50%,\r\n                rgba(38, 36, 51, 0.36),\r\n                rgba(21, 20, 26, 0.48) 31%\r\n              )`,\r\n              \r\n              zIndex: 1999,\r\n          },\r\n          content:{\r\n              position:\"fixed\",\r\n              height: \"600px\",\r\n              width:\"330px\",\r\n              background:\"#fff\",\r\n              margin:\"auto\",\r\n              border: \"none\",\r\n              zIndex: 1999,\r\n              padding:10, \r\n          }\r\n      }\r\n     }\r\n     else{\r\n        settings = {\r\n          overlay:{\r\n              background: `radial-gradient(\r\n                circle at 50% 50%,\r\n                rgba(38, 36, 51, 0.36),\r\n                rgba(21, 20, 26, 0.48) 31%\r\n              )`,\r\n              \r\n              zIndex: 1999,\r\n          },\r\n          content:{\r\n              position:\"fixed\",\r\n              height: \"600px\",\r\n              width:\"800px\",\r\n              background:\"#fff\",\r\n              margin:\"auto\",\r\n              border: \"none\",\r\n              zIndex: 1999,\r\n              padding:10, \r\n          }\r\n      }\r\n     };\r\n    \r\n\r\n    useEffect(() => {\r\n        if(iList){\r\n                \r\n            const data = searchFunc(iList, itemSearch);\r\n            console.log(itemSearch);\r\n            console.log(data);\r\n            if (data.length > 0) {\r\n            setItems(data);\r\n                }\r\n        }\r\n\r\n            setLoading(false);\r\n        }, [itemSearch]);\r\n    useEffect(() => {\r\n        if(iList){\r\n            const data = iList.filter((item) => item.status.match(statusSearch));\r\n            console.log(statusSearch);\r\n            console.log(data);\r\n            if (data.length > 0) {\r\n            setItems(data);\r\n            }\r\n        }\r\n         setLoading(false);\r\n    }, [statusSearch]);  \r\n    useEffect(() => {\r\n        if(iList && deleteId >= 0 && deleteId){\r\n            const data = iList.filter((item) => item.id !== deleteId );\r\n            console.log(data)\r\n            if (data.length > 0) {\r\n            setItems(data);\r\n            }else{\r\n                setItems([]);\r\n            }\r\n            \r\n            localStorage.setItem(\"Ilistst\" ,JSON.stringify(data));\r\n            console.log(deleteId);\r\n        }\r\n    }, [deleteId]); \r\n    useEffect(() => {\r\n        if(iList && updateId >= 0 && updateId){\r\n            let data = []\r\n            iList.forEach((child , index ) => {\r\n                if(child.id === updateId){\r\n                    console.log(child.status);\r\n                    child.status = \"Paid\";\r\n                    console.log(child.status);\r\n                }\r\n            });\r\n            data = iList;\r\n            console.log(data);\r\n            if (data.length > 0) {\r\n            setItems(data);\r\n            }\r\n            \r\n            localStorage.setItem(\"Ilistst\" ,JSON.stringify(data));\r\n            console.log(updateId);\r\n        }\r\n        console.log(updateId);\r\n    }, [updateId]); \r\n\r\n    const backf = () => {\r\n        backFunc(false);\r\n    }\r\n    useEffect(() => {\r\n        if(invoIdMod ) setModalInvoice(true);\r\n    }, [invoIdMod]);\r\n    useEffect(() => {\r\n        if(iList && invoId >= 0 && invoId){\r\n            const data = iList.filter((item) => item.id === invoId );\r\n            if (data.length > 0) {\r\n            setInvoItem(invoId);\r\n            }\r\n            setInvoIdMod(invoId)\r\n            console.log(invoItem);\r\n        }\r\n    }, [invoId]);\r\n    \r\n    return (\r\n        <div>\r\n          <button className=\"form-s2\" onClick={backf}>Go back</button> \r\n          <h5 className=\"text-center\">Filter your invoices</h5>\r\n          <div className=\"searchBox\">\r\n                  <ItemSearch\r\n                    getQuery={(q) => {\r\n                      setItemSearch(q);\r\n                    }}\r\n                  />\r\n                  <select name=\"food-opt\" id=\"food-o\"  onChange={(e) => {setStatusSearch(e.target.value)}}>\r\n                                    <option value=\"Paid\">Paid</option>\r\n                                    <option value=\"unpaid\">Unpaid</option>\r\n                      \r\n                    </select>\r\n                </div>\r\n          {\r\n              (iList) ? ((iList.length > 0 ) ? <ul className=\"iul\">\r\n              {    \r\n                 \r\n                  items.map((data , index) => {\r\n                      return(\r\n                              <li>\r\n                                  \r\n                                  <h5 className=\"sumdes1\">Invoice-{data.id}</h5> \r\n                                  <div className=\"listofi\">\r\n                                  <p>{data.status} bill amount - ${data.bill}</p>\r\n                                  \r\n                                  {(data.status === \"Paid\")?<button className=\"form-s2  \" onClick ={() => setInvoId(data.id)}>Invoice</button> : <button className=\"form-s2 edit\"  onClick={() => setUpdateId(data.id)}>Pay</button>}\r\n                                  <button className=\"form-s2 delete\" onClick={() => setDeleteId(data.id)}>Delete</button> \r\n                                  </div>\r\n                                  \r\n                                  <p className=\"sumdes\">You ordered- {data.items.map(d => {return(<span>{d.name}, </span>)})}</p>\r\n                              </li>\r\n                      )})\r\n              }\r\n            </ul>:\r\n                <div className=\"alertBox\">\r\n                <h5>Oopps !! Empty invoice list  </h5>\r\n                </div>\r\n            \r\n            ):\r\n            <div className=\"alertBox\">\r\n                <h5>Oopps !!You dont have any invoices </h5>\r\n                </div>\r\n          }\r\n\r\n<Modal isOpen={modalInvoice} onRequestClose={() => setModalInvoice(false)}\r\n         style={settings\r\n        }\r\n        >\r\n           <div className=\"bg\">\r\n              \r\n            <InvoiceComp\r\n                idata={invoItem}\r\n              closeModal={setModalInvoice}/>\r\n            </div>\r\n        </Modal>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvoceList\r\n","D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\ItemSearch.jsx",[],"D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\InvoiceComp.jsx",["62","63","64"],"import React,{useState,useEffect, useRef } from 'react';\r\nimport InvoiceChildComp from './InvoiceChildComp';\r\n\r\nfunction InvoiceComp({closeModal, idata}) {\r\n    let iList =JSON.parse(localStorage.getItem('Ilistst')) ;\r\n    const [itemInvo, setItemInvo] = useState(null);\r\n    \r\n    const [itemCol, setItemCo] = useState(\"#e02a24\");\r\n    const [itemColSeter, setItemCoSeter] = useState(null);\r\n    const componentRef = useRef();\r\n    const handlePrint = () => {\r\n        window.print();\r\n    }\r\n    let Colors = [\r\n       \r\n        \"#162b3d\",\"#e02a24\",\"#0f70c5\"\r\n    ]\r\n\r\n    useEffect(() => {\r\n        if(iList){\r\n                \r\n            const data = iList.filter((item) => item.id === idata );\r\n            setItemInvo(data[0]);\r\n        }\r\n        }, []);\r\n\r\n     useEffect(() => {\r\n       console.log(itemColSeter);\r\n       setItemCo(Colors[itemColSeter]);\r\n    }, [itemColSeter]);\r\n    const closeModalLP = (f) => {\r\n        closeModal(f);\r\n    }\r\n    console.log(itemInvo)\r\n    return (\r\n        <>\r\n                \r\n              <button type=\"submit\" className=\"form-s2\" onClick={() => closeModalLP(false)}>close</button>\r\n              <button type=\"submit\" className=\"form-s2 edit ml-3\" onClick={handlePrint}>Print</button>\r\n              \r\n                {(idata && itemInvo )? <div>\r\n                    <InvoiceChildComp  item={itemInvo} itemColor={itemCol}/>\r\n                <div className=\"ColorBox\">\r\n                    <p>change color of invoice </p>\r\n                <button  className=\"colorbtn c1 \" onClick={() => {setItemCoSeter(0)}}></button>\r\n                <button  className=\"colorbtn c2\" onClick={() => {setItemCoSeter(1)}}></button>\r\n                <button className=\"colorbtn c3\" onClick={() => {setItemCoSeter(2)}}></button>\r\n                </div>\r\n                \r\n                </div>: <h1>loading...</h1> }\r\n              \r\n        </>\r\n    )\r\n}\r\n\r\nexport default InvoiceComp\r\n","D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\InvoiceChildComp.jsx",[],"D:\\personal projects\\assignments\\Invoice_app\\invoiceapp\\src\\hooks\\useCurrentHeight.jsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":23,"column":10,"nodeType":"71","messageId":"72","endLine":23,"endColumn":20},{"ruleId":"69","severity":1,"message":"73","line":77,"column":7,"nodeType":"71","messageId":"72","endLine":77,"endColumn":18},{"ruleId":"69","severity":1,"message":"74","line":252,"column":9,"nodeType":"71","messageId":"72","endLine":252,"endColumn":23},{"ruleId":"75","severity":1,"message":"76","line":267,"column":9,"nodeType":"77","endLine":267,"endColumn":63},{"ruleId":"69","severity":1,"message":"78","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"79","line":14,"column":9,"nodeType":"71","messageId":"72","endLine":14,"endColumn":13},{"ruleId":"69","severity":1,"message":"80","line":15,"column":9,"nodeType":"71","messageId":"72","endLine":15,"endColumn":13},{"ruleId":"69","severity":1,"message":"81","line":12,"column":12,"nodeType":"71","messageId":"72","endLine":12,"endColumn":21},{"ruleId":"82","severity":1,"message":"83","line":99,"column":12,"nodeType":"84","endLine":99,"endColumn":24,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"83","line":110,"column":8,"nodeType":"84","endLine":110,"endColumn":22,"suggestions":"86"},{"ruleId":"82","severity":1,"message":"83","line":124,"column":8,"nodeType":"84","endLine":124,"endColumn":18,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"83","line":145,"column":8,"nodeType":"84","endLine":145,"endColumn":18,"suggestions":"88"},{"ruleId":"82","severity":1,"message":"89","line":162,"column":8,"nodeType":"84","endLine":162,"endColumn":16,"suggestions":"90"},{"ruleId":"69","severity":1,"message":"91","line":10,"column":11,"nodeType":"71","messageId":"72","endLine":10,"endColumn":23},{"ruleId":"82","severity":1,"message":"92","line":25,"column":12,"nodeType":"84","endLine":25,"endColumn":14,"suggestions":"93"},{"ruleId":"82","severity":1,"message":"94","line":30,"column":8,"nodeType":"84","endLine":30,"endColumn":22,"suggestions":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'toggleView' is assigned a value but never used.","Identifier","unusedVar","'addedIlists' is assigned a value but never used.","'incrementCount' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useState' is defined but never used.","'mnbl' is assigned a value but never used.","'adbl' is assigned a value but never used.","'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'iList'. Either include it or remove the dependency array.","ArrayExpression",["98"],["99"],["100"],["101"],"React Hook useEffect has missing dependencies: 'iList' and 'invoItem'. Either include them or remove the dependency array.",["102"],"'componentRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'iList' and 'idata'. Either include them or remove the dependency array.",["103"],"React Hook useEffect has a missing dependency: 'Colors'. Either include it or remove the dependency array.",["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [iList, itemSearch]",{"range":"119","text":"120"},"Update the dependencies array to be: [iList, statusSearch]",{"range":"121","text":"122"},"Update the dependencies array to be: [deleteId, iList]",{"range":"123","text":"124"},"Update the dependencies array to be: [iList, updateId]",{"range":"125","text":"126"},"Update the dependencies array to be: [iList, invoId, invoItem]",{"range":"127","text":"128"},"Update the dependencies array to be: [iList, idata]",{"range":"129","text":"130"},"Update the dependencies array to be: [Colors, itemColSeter]",{"range":"131","text":"132"},[2774,2786],"[iList, itemSearch]",[3115,3129],"[iList, statusSearch]",[3578,3588],"[deleteId, iList]",[4268,4278],"[iList, updateId]",[4749,4757],"[iList, invoId, invoItem]",[759,761],"[iList, idata]",[874,888],"[Colors, itemColSeter]"]